#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

DEPENDENCY_S3_BUCKET_PATH="http://s3.amazonaws.com/mono-dependencies"

# config
MONO_VERSION="3.2.3"
NGINX_VERSION="1.5.2"

# s3 packages
MONO_PACKAGE_URL="${DEPENDENCY_S3_BUCKET_PATH}/mono-${MONO_VERSION}.tar.gz"
NUGET_TARGETS_FILE_URL="${DEPENDENCY_S3_BUCKET_PATH}/vendor/NuGet/NuGet.targets"

BUILD_DIR=$1
CACHE_DIR=$2

LP_DIR=`cd $(dirname $0); cd ..; pwd`

cd ${BUILD_DIR}

# cache may not exist yet
mkdir -p ${CACHE_DIR}

echo "-----> Bundling Mono v${MONO_VERSION}"
MONO_CACHE_LOCATION=${CACHE_DIR}/mono-${MONO_VERSION}
if [ ! -d "${MONO_CACHE_LOCATION}" ]; then
  echo "Fetching Mono v${MONO_VERSION} @ ${MONO_PACKAGE_URL}"
  mkdir -p ${MONO_CACHE_LOCATION}
  cd ${MONO_CACHE_LOCATION}
  curl ${MONO_PACKAGE_URL} -s | tar xz
  cd ${BUILD_DIR}
fi


if [ ! -d "${CACHE_DIR}/NuGet.targets" ]; then
  echo "-----> Fetching fixed NuGet.targets"
  cd ${CACHE_DIR}
  curl ${NUGET_TARGETS_FILE_URL} -s -o NuGet.targets
  cd ${BUILD_DIR}
fi

cp -r "${MONO_CACHE_LOCATION}/mono" .
# TODO: this is done because `ln -s` causes nuget to fail in subtle ways. Fix please
# ln -s "$BUILD_DIR/mono" /app
cp -r "${MONO_CACHE_LOCATION}/mono" /app/.

# find a solution file
SLN=$(find . -maxdepth 1 -iname "*.sln")
if [ $( echo "${SLN}" | wc -l ) -gt 1 ]; then
  echo "-----> Too many *.sln files"
  exit 1
fi

if [ "${SLN}" == "" ]; then
  echo "-----> No *.sln file found"
  exit 1
fi

# compile an uploaded application
echo "-----> Compiling Mono application"

export PATH="/app/mono/bin:${PATH}"
export LD_LIBRARY_PATH="/app/mono/lib:${LD_LIBRARY_PATH}"

# Add certs to trust store
cp -r ${LP_DIR}/.config ~/.
cp -r ${LP_DIR}/.config ${BUILD_DIR}/.

# Find all NuGet target files and overwrite with know good version
find `pwd` -name "NuGet.targets" -exec cp -f ${CACHE_DIR}/NuGet.targets {} \;

# Add symbolic link to deal with NuGet casing breakage
find `pwd` -name "NuGet.targets" -exec dirname {} \; | xargs -I {} ln -s {}/NuGet.targets {}/nuget.targets

BUILD_CACHE_LOCATION=${CACHE_DIR}/build/
mkdir -p ${BUILD_CACHE_LOCATION}

# Build
EnableNuGetPackageRestore=true xbuild /property:Configuration=Release /property:OutDir=${BUILD_CACHE_LOCATION} ${SLN}

cp -r ${BUILD_CACHE_LOCATION}* ${BUILD_DIR}

mkdir -p ${BUILD_DIR}/.profile.d
cp -n ${LP_DIR}/.profile.d/* ${BUILD_DIR}/.profile.d/

cp ${LP_DIR}/start ${BUILD_DIR}/start

echo "-----> Build SUCCESS"
